
# 服务端口
server.port=8082
spring.application.name= admin
server.servlet.context-path= /admin
spring.profiles.active=

# 数据库链接驱动
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 特别注意：java 9以后需要将com.mysql.jdbc.Driver  改为  com.mysql.cj.jdbc.Driver即可
spring.datasource.druid.driver-class-name= com.mysql.cj.jdbc.Driver
#基本属性
#spring.datasource.druid.url= jdbc:mysql://127.0.0.1:3306/ultrapower?characterEncoding=UTF-8&serverTimezone=UTC&useSSL=false
spring.datasource.druid.url= jdbc:mysql://127.0.0.1:3306/ultrapower?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false
spring.datasource.druid.username= root
spring.datasource.druid.password= 123456
#配置初始化大小/最小/最大[仅用于测试，生成环境需要修改哦]
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=5
#获取连接等待超时时间
spring.datasource.druid.max-wait=60000
#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.time-between-eviction-runs-millis=60000
#一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
#指定获取连接时连接校验的sql查询语句
spring.datasource.druid.validation-query=SELECT 'x'
#验证连接的有效性
spring.datasource.druid.test-while-idle=true
#获取连接时候验证，会影响性能（不建议true）
spring.datasource.druid.test-on-borrow=false
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

#配置mybatis
mybatis.mapper-locations= classpath:mapper/*Mapper.xml
mybatis.type-aliases-package= com.example.core.entity

#配置pagehelper属性
pagehelper.helper-dialect=mysql
#分页参数合理化，默认false禁用 .启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页
#用合理化时，如果pageNum<1或pageNum>pages会返回空数据
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
# 设置为true时，使用RowBounds分页会进行count查询 .默认=false
#pagehelper.row-bounds-with-count=true
pagehelper.params= count=countsql


#关闭Thymeleaf 的缓存开发过程中无需重启,避免修改模板还要重启服务器
spring.thymeleaf.cache = false
#设置thymeleaf页面的编码
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML5
spring.thymeleaf.servlet.content-type=text/html
#设置thymeleaf页面的后缀
spring.thymeleaf.suffix=.html
#设置thymeleaf页面的存储路径
spring.thymeleaf.prefix=classpath:/templates/

#配置请求体中头部的token键值对的key键名称
request.header.token.key = admin-token